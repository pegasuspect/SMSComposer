<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">
	<Color x:Key="PlusColor">#FF979797</Color>
	<Color x:Key="PlusButtonHoverColor">#FF232323</Color>
    <Style x:Key="ButtonText" TargetType="TextBlock"/>
    <Color x:Key="AppBarBackColor">Black</Color>
    <Color x:Key="AppBarFrontColor">White</Color>
    <Style x:Key="RoundPlusButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
		<Setter Property="Padding" Value="10,5,10,6"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Duration="0" To="{StaticResource PlusButtonHoverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="MouseOver"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Height="72" Width="72">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid>
								<Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="72" Stroke="#FF535353" StrokeThickness="5" VerticalAlignment="Top" Width="72" Fill="#00000000"/>
								<Path Data="M10,34.25 L62.0096,34.25" HorizontalAlignment="Center" Height="5" Margin="10,33.5" Stretch="Fill" StrokeThickness="5" UseLayoutRounding="False" VerticalAlignment="Center" Width="52" Fill="#00000000" RenderTransformOrigin="0.5,0.5">
									<Path.Stroke>
										<SolidColorBrush Color="{StaticResource PlusColor}"/>
									</Path.Stroke>
									<Path.RenderTransform>
										<CompositeTransform Rotation="90"/>
									</Path.RenderTransform>
								</Path>
								<Path Data="M10,34.25 L62.0096,34.25" HorizontalAlignment="Center" Height="5" Margin="10,33.5" Stretch="Fill" StrokeThickness="5" UseLayoutRounding="False" VerticalAlignment="Center" Width="52" Fill="#00000000">
									<Path.Stroke>
										<SolidColorBrush Color="{StaticResource PlusColor}"/>
									</Path.Stroke>
								</Path>
							</Grid>
						</Grid>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="PhoneInputStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
        <Setter Property="Background" Value="{StaticResource PhoneTextBoxBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PhoneTextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PhoneTextBoxBrush}"/>
        <Setter Property="SelectionBackground" Value="{StaticResource PhoneAccentBrush}"/>
        <Setter Property="SelectionForeground" Value="{StaticResource PhoneTextBoxSelectionForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ReadonlyBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ReadonlyBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ReadonlyBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxReadOnlyBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxEditBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PhoneTextBoxEditBackgroundBrush}" Margin="{StaticResource PhoneTouchTargetOverhang}"/>
                        <Border x:Name="ReadonlyBorder" BorderBrush="{StaticResource PhoneDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Margin="{StaticResource PhoneTouchTargetOverhang}" Visibility="Collapsed"/>
                        <Border BorderBrush="Black" BorderThickness="0,0,0,0.5" Background="White" Margin="{StaticResource PhoneTouchTargetOverhang}" Padding="0,0,0,1" UseLayoutRounding="True">
                            <ScrollViewer Margin="{StaticResource PhoneTextBoxInnerMargin}" >
                                <ContentControl x:Name="ContentElement" BorderThickness="0" HorizontalContentAlignment="Stretch" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" UseLayoutRounding="False"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterTextBoxStyle" TargetType="TextBox">
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
		<Setter Property="Background" Value="{StaticResource PhoneTextBoxBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneTextBoxForegroundBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneTextBoxBrush}"/>
		<Setter Property="SelectionBackground" Value="{StaticResource PhoneAccentBrush}"/>
		<Setter Property="SelectionForeground" Value="{StaticResource PhoneTextBoxSelectionForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ReadonlyBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ReadonlyBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ReadonlyBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxReadOnlyBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxEditBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PhoneTextBoxEditBackgroundBrush}" Margin="{StaticResource PhoneTouchTargetOverhang}"/>
						<Border x:Name="ReadonlyBorder" BorderBrush="{StaticResource PhoneDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Margin="{StaticResource PhoneTouchTargetOverhang}" Visibility="Collapsed"/>
						<Border BorderBrush="Black" BorderThickness="0,0,0,0.5" Background="White" Padding="0" UseLayoutRounding="True">
							<ContentControl x:Name="ContentElement" BorderThickness="0" HorizontalContentAlignment="Stretch" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" UseLayoutRounding="False" Margin="0,-7.75,0,0" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FilterCheckBoxStyle" TargetType="CheckBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Viewbox HorizontalAlignment="Left" VerticalAlignment="Center">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True">
											<DoubleAnimation.EasingFunction>
												<QuinticEase EasingMode="EaseIn"/>
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
										<DoubleAnimation Duration="0" To="1.08" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.265" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="2.593" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.399" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.536" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.598" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="8.263" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="6.242" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.ZIndex)" Storyboard.TargetName="rectangle">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>-1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateMark">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center">
							<Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid Grid.Column="0" VerticalAlignment="Center" Margin="0" Height="44" HorizontalAlignment="Center">
									<Border x:Name="CheckBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource PhoneBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="44" IsHitTestVisible="False" VerticalAlignment="Center" Width="44" Margin="3,0,0,0"/>
									<Rectangle x:Name="IndeterminateMark" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="16"/>
									<Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="26" StrokeThickness="0" StrokeLineJoin="Round" VerticalAlignment="Top" Width="26" Margin="3,3,0,0" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
										<Rectangle.RenderTransform>
											<CompositeTransform/>
										</Rectangle.RenderTransform>
										<Rectangle.Fill>
											<SolidColorBrush Color="{StaticResource PlusButtonHoverColor}"/>
										</Rectangle.Fill>
									</Rectangle>
									<Image x:Name="image" Margin="0,0,1,3" Opacity="0" Source="/Assets/AppBar/check.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
										<Image.RenderTransform>
											<CompositeTransform/>
										</Image.RenderTransform>
									</Image>
								</Grid>
								<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="12,0,0,0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}"/>
							</Grid>
						</Grid>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="PlusButton" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation d:IsOptimized="True" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{StaticResource PlusButtonHoverColor}" Duration="0"/>
                                        <ColorAnimation d:IsOptimized="True" Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource PlusButtonHoverColor}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="0">
                                <Viewbox Margin="-7,-7,-6,-6">
                                    <Grid Height="72" Width="72">
                                        <Ellipse x:Name="ellipse" Width="72" VerticalAlignment="Top" StrokeThickness="5" Stroke="#FF535353" Height="72" HorizontalAlignment="Left" Fill="#00000000"/>
                                        <Path Width="52" VerticalAlignment="Center" UseLayoutRounding="False" StrokeThickness="5" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Margin="10,33.5" Height="5" HorizontalAlignment="Center" Fill="#00000000" Data="M10,34.25 L62.0096,34.25">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource PlusColor}"/>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <CompositeTransform Rotation="90"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <Path Width="52" VerticalAlignment="Center" UseLayoutRounding="False" StrokeThickness="5" Stretch="Fill" Margin="10,33.5" Height="5" HorizontalAlignment="Center" Fill="#00000000" Data="M10,34.25 L62.0096,34.25">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{StaticResource PlusColor}"/>
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                            <ContentControl x:Name="ContentContainer" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" Margin="12,0,0,0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentControl.Foreground>
                                    <SolidColorBrush Color="{StaticResource PlusColor}"/>
                                </ContentControl.Foreground>
                            </ContentControl>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Storyboard x:Name="FadeIn">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="LayoutRoot">
            <EasingDoubleKeyFrame KeyTime="0" Value="697">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LayoutRoot">
            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuadraticEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuadraticEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style TargetType="Button" x:Key="roundButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="White">
                        <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
    	<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
    	<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
    	<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
    	<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
    	<Setter Property="Padding" Value="10,5,10,6"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ButtonBase">
    				<Grid Background="Transparent">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver"/>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
    						<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Border>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="FiltersToggleButtonStyle" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
    	<Setter Property="Padding" Value="8"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ToggleButton">
    				<Viewbox>
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EnabledBackground">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledBackground">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Unchecked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="180">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="-5">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="6.125">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1.011">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.011">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1.011">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.011">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="-1.25">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-1.25">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseOut"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="0">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseIn"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="180">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseIn"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="path">
    										<EasingDoubleKeyFrame KeyTime="0" Value="6">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseIn"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-5">
    											<EasingDoubleKeyFrame.EasingFunction>
    												<QuadraticEase EasingMode="EaseIn"/>
    											</EasingDoubleKeyFrame.EasingFunction>
    										</EasingDoubleKeyFrame>
    									</DoubleAnimationUsingKeyFrames>
    									<DoubleAnimation Duration="0:0:0.5" To="1.011" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" d:IsOptimized="True">
    										<DoubleAnimation.EasingFunction>
    											<QuadraticEase EasingMode="EaseIn"/>
    										</DoubleAnimation.EasingFunction>
    									</DoubleAnimation>
    									<DoubleAnimation Duration="0:0:0.5" To="1.011" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" d:IsOptimized="True">
    										<DoubleAnimation.EasingFunction>
    											<QuadraticEase EasingMode="EaseIn"/>
    										</DoubleAnimation.EasingFunction>
    									</DoubleAnimation>
    									<DoubleAnimation Duration="0:0:0.5" To="-1.25" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="path" d:IsOptimized="True">
    										<DoubleAnimation.EasingFunction>
    											<QuadraticEase EasingMode="EaseIn"/>
    										</DoubleAnimation.EasingFunction>
    									</DoubleAnimation>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid Background="Transparent" Height="30" Width="30">
    						<Border x:Name="EnabledBackground" Margin="7">
    							<ContentControl x:Name="EnabledContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						</Border>
    						<Border x:Name="DisabledBackground" BorderBrush="{StaticResource PhoneDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" IsHitTestVisible="False" Margin="{StaticResource PhoneTouchTargetOverhang}" Visibility="Collapsed">
    							<ContentControl x:Name="DisabledContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{StaticResource PhoneDisabledBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						</Border>
    						<Path x:Name="path" Data="M0.5,0.5 L11.125,10.5 M10.5,10.5 L21.5,0.500001" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="11" Margin="5,9,0,0" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Top" Width="22" RenderTransformOrigin="0.5,0.5" StrokeThickness="0.5">
    							<Path.RenderTransform>
    								<CompositeTransform TranslateX="-1.25" TranslateY="-5" Rotation="180"/>
    							</Path.RenderTransform>
    						</Path>
    					</Grid>
    				</Viewbox>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <System:Double x:Key="HeightToBeToggled">-280</System:Double>
    <Thickness x:Key="FilterStackMarginStyle">0,10,0,12</Thickness>
    <FontFamily x:Key="FilterFontFamily">Times New Roman</FontFamily>
    <System:Double x:Key="FilterFontSize">21.333</System:Double>
    <Thickness x:Key="FilterButtonBorderThicnessStyle">3</Thickness>
    <FontWeight x:Key="FilterFontWeightStyle">Bold</FontWeight>
    <Thickness x:Key="ButtonPadding">10,5,10,6</Thickness>
    <QuadraticEase x:Key="SlideDownEasingFunction" EasingMode="EaseOut"/>
    <QuadraticEase x:Key="SlideUpEasingFunction" EasingMode="EaseIn"/>
    <DataTemplate x:Key="GroupListTemplateStyle">
        <Grid>
            <StackPanel Orientation="Vertical">
                <TextBlock TextWrapping="Wrap" Text="{Binding GroupName}" VerticalAlignment="Top" FontFamily="{StaticResource PhoneFontFamilyBold}" FontSize="{StaticResource PhoneFontSizeMedium}">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource PlusButtonHoverColor}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock TextWrapping="Wrap" Text="{Binding ContactsList[0].DisplayName}" VerticalAlignment="Top" FontFamily="{StaticResource PhoneFontFamilyNormal}" FontSize="{StaticResource PhoneFontSizeNormal}">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource PlusColor}"/>
                    </TextBlock.Foreground>
                </TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>